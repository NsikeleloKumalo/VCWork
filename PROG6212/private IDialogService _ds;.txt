        private IDialogService _ds;
        protected override void OnStartup(StartupEventArgs e)
        {// Resolve an instance of IDialogService using dependency injection.
            IDialogService _ds = ContainerStore.DI.Resolve<IDialogService>();

            // Initialize your application with the appropriate factory.
            IContainerFactory factory = ContainerStore.GetFactory();
            //Entry.Initialize(factory);

            // Continue with the normal application startup process.
            base.OnStartup(e);
        }
        private void Application_Startup(object sender, StartupEventArgs e)
        {
            var _actualmainwindow = new MainWindow();//remeber to dispose at the end 
            int maxtries = 5;
            int trycount = 0;
            while (!CredentialHolder.Singleton.IsAuthenticated)
            {
                var _mw = Application.Current.MainWindow;
                var _authwindow = new AuthenticationWindow();
                _authwindow.ShowDialog();
                trycount++;//add one count
                if (trycount >= maxtries) break;
            }
            if (CredentialHolder.Singleton.IsAuthenticated)
            {
                //show the main window (may be add other validations for feature control)

                _actualmainwindow.ShowDialog();
            }
            else
            {
                _ds?.Error("Authentication Failure!", "Unable to authenticate.Application will close now");
                //if (Application.Current.MainWindow != null)
                //{
                //    Application.Current.MainWindow.Close();
                //}
            }
        }

        private void ContainerRegistration()
        {

        }
    }
}
