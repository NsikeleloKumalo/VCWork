

CREATE TABLE VEHICLES (
VIN CHAR(6) PRIMARY KEY NOT NULL,
MANUFACTURER VARCHAR(25) NOT NULL,
VEHICLE_MODEL VARCHAR(50) NOT NULL,
PRICE DECIMAL NOT NULL);

CREATE TABLE CUSTOMERS (
CUSTOMER_ID CHAR(8) PRIMARY KEY NOT NULL,
CUSTOMER_NAME VARCHAR(50) NOT NULL,
CUSTOMER_EMAIL VARCHAR(50) NOT NULL);

CREATE TABLE VEHICLE_SALES (
SALES_ID NUMBER PRIMARY KEY NOT NULL,
SALES_DATE DATE NOT NULL,
VIN CHAR(6) NOT NULL,
CUSTOMER_ID CHAR(8) NOT NULL,
FOREIGN KEY(VIN) REFERENCES VEHICLES(VIN),
FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID));

INSERT ALL
INTO VEHICLES (VIN, MANUFACTURER, VEHICLE_MODEL, PRICE) VALUES ('100001', 'BMW', 'M3 Coupe', 450000.00)
INTO VEHICLES (VIN, MANUFACTURER, VEHICLE_MODEL, PRICE) VALUES ('100002', 'AUDI', 'TT Roadster', 180000.00)
INTO VEHICLES (VIN, MANUFACTURER, VEHICLE_MODEL, PRICE) VALUES ('100003', 'MAZDA', 'CX3', 250000.00)
SELECT * FROM dual;
INSERT ALL
INTO CUSTOMERS (CUSTOMER_ID, CUSTOMER_NAME, CUSTOMER_EMAIL) VALUES ('cust_101', 'Jeff Jones', 'jj@xcom.com')
INTO CUSTOMERS (CUSTOMER_ID, CUSTOMER_NAME, CUSTOMER_EMAIL) VALUES ('cust_102', 'Sally Williams', 'sally@ymail.com')
INTO CUSTOMERS (CUSTOMER_ID, CUSTOMER_NAME, CUSTOMER_EMAIL) VALUES ('cust_103', 'Sam Henry', 'sat@xsat.com')
SELECT * FROM dual;

INSERT INTO VEHICLE_SALES  VALUES (1, '15 March 2018', '100002', 'cust_101');
INSERT INTO VEHICLE_SALES  VALUES (2, '17 March 2018', '100001', 'cust_101');
INSERT INTO VEHICLE_SALES  VALUES (3, '27 March 2018', '100003', 'cust_103');
INSERT INTO VEHICLE_SALES  VALUES (4, '30 March 2018', '100003', 'cust_102');
select * from vehicle_sales;


--question 2
SELECT * FROM (SELECT C.CUSTOMER_NAME, COUNT(VS.CUSTOMER_ID) AS PURCHASE_COUNT, 'R '||SUM(V.PRICE) AS TOTAL
FROM CUSTOMERS C INNER JOIN VEHICLE_SALES VS
ON C.CUSTOMER_ID = VS.CUSTOMER_ID
INNER JOIN VEHICLES V ON VS.VIN = V.VIN
GROUP BY C.CUSTOMER_NAME
ORDER BY COUNT(VS.CUSTOMER_ID) DESC)
WHERE ROWNUM = 1;

--quesiton 3
SELECT V.MANUFACTURER, V.VEHICLE_MODEL AS MODEL, 'R '|| V.PRICE AS PRICE, 'R '||(V.PRICE*0.1) AS COMMISION, 'R '||(V.PRICE+ (V.PRICE*0.1)) AS TOTAL, C.CUSTOMER_NAME
FROM VEHICLES V 
INNER JOIN VEHICLE_SALES VS 
ON V.VIN = VS.VIN
INNER JOIN CUSTOMERS C ON VS.CUSTOMER_ID = C.CUSTOMER_ID;
--question 4
SET SERVEROUTPUT ON;
DECLARE
CUSTOMER_NAME VARCHAR(25);
VIN CHAR(6);
PRICE DECIMAL;
 
CURSOR QUESTION4 IS 
SELECT C.CUSTOMER_NAME, VS.VIN, V.PRICE
FROM CUSTOMERS C
INNER JOIN VEHICLE_SALES VS
ON C.CUSTOMER_ID = VS.CUSTOMER_ID 
INNER JOIN VEHICLES V
ON V.VIN = VS.VIN
WHERE V.PRICE > 300000
ORDER BY V.PRICE DESC;
BEGIN
  OPEN QUESTION4;
LOOP
FETCH QUESTION4 INTO CUSTOMER_NAME, VIN, PRICE;
EXIT WHEN QUESTION4%NOTFOUND;
      DBMS_OUTPUT.PUT_LINE('CUSTOMER NAME:  '|| CUSTOMER_NAME);
       DBMS_OUTPUT.PUT_LINE('VIN:            '|| VIN);
        DBMS_OUTPUT.PUT_LINE('PRICE:          R'|| PRICE);
      DBMS_OUTPUT.PUT_LINE('----------------------------------');
END LOOP;
CLOSE QUESTION4;
END;



























