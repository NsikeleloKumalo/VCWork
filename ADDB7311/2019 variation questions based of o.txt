2019 variation questions based of off the preloads:

Sample Data for Question 2 Variation 1:
Create a SQL Query to display the total revenue generated by each customer from their pet purchases.

Assuming additional data in PET_SALES:

sales_id	sales_date	pet_id	customer_id
6	'15-Mar-2023'	100001	cust_101
7	'17-Mar-2023'	100002	cust_104
8	'27-Mar-2023'	100003	cust_101
9	'30-Mar-2023'	100005	cust_105
10	'31-Mar-2023'	100004	cust_104

SOLUTION: 
Question 2 Variation 1:
Create a SQL Query to display the total revenue generated by each customer from their pet purchases.

Sample Results:

yaml
Copy code
CUSTOMER_NAME   TOTAL_REVENUE
Jeff Jones      3800
Sally Williams  550
Sam Henry       2500
Jack West       5000
Jabulani Zintle 280


SELECT C.customer_name, SUM(P.price) AS TOTAL_REVENUE
FROM CUSTOMER C
JOIN PET_SALES PS ON C.customer_id = PS.customer_id
JOIN PETS P ON PS.pet_id = P.pet_id
GROUP BY C.customer_name;

Question 2 Variation 2:
Modify the query to display the most frequent pet type purchased by each customer.

Sample results 
CUSTOMER_NAME   MOST_FREQUENT_PET_TYPE
Jeff Jones      Cat
Sally Williams  Rabbit
Sam Henry       Bird
Jack West       Dog
Jabulani Zintle Fish


Solution
SELECT C.customer_name, 
       MODE() WITHIN GROUP (ORDER BY P.pet_type) AS MOST_FREQUENT_PET_TYPE
FROM CUSTOMER C
JOIN PET_SALES PS ON C.customer_id = PS.customer_id
JOIN PETS P ON PS.pet_id = P.pet_id
GROUP BY C.customer_name;


Question 2 Variation 3:
Ask for a list of customers who haven't made any pet purchases.

Sample Results: 
CUSTOMER_NAME
Sally Williams


SELECT C.customer_name
FROM CUSTOMER C
LEFT JOIN PET_SALES PS ON C.customer_id = PS.customer_id
WHERE PS.sales_id IS NULL;


Question 3 Variation 1:
Calculate the total commission earned by each customer based on a 10% commission rate for pet sales.

Sample Results:


CUSTOMER_ID PET_ID  COMMISSION  TOTAL
cust_101    100002  380.0       3800
cust_104    100001  500.0       5000
cust_103    100003  250.0       2500
cust_102    100005  55.0        550
cust_105    100004  28.0        280

SELECT PS.customer_id, PS.pet_id, 
       (P.price * 0.10) AS COMMISSION,
       P.price AS TOTAL
FROM PET_SALES PS
JOIN PETS P ON PS.pet_id = P.pet_id;


Question 3 Variation 2:
Show the total revenue earned from pet sales for each pet type.

No additional sample data is required as it uses the existing data.

Show the total revenue earned from pet sales for each pet type.

Sample Results:


PET_TYPE  TOTAL_REVENUE
Dog       5000
Cat       3800
Bird      2500
Fish      280
Rabbit    550

SELECT P.pet_type, SUM(P.price) AS TOTAL_REVENUE
FROM PETS P
JOIN PET_SALES PS ON P.pet_id = PS.pet_id
GROUP BY P.pet_type;

Question 3 Variation 3:
Calculate the average transaction amount for all pet purchases.

Sample Results:

AVERAGE_TRANSACTION_AMOUNT
3426

SELECT AVG(P.price) AS AVERAGE_TRANSACTION_AMOUNT
FROM PETS P
JOIN PET_SALES PS ON P.pet_id = PS.pet_id;


Question 4 Variation 1:
Create a view named Pet_Transactions_Monthly that displays pet sales transactions for a specific month.


No additional sample data is required as it uses the existing data.

CREATE VIEW Pet_Transactions_Monthly AS
SELECT PS.customer_id, PS.pet_id, PS.sales_date AS TRANS_DATE, P.pet_type AS PET_TYPE
FROM PET_SALES PS
JOIN PETS P ON PS.pet_id = P.pet_id
WHERE PS.sales_date BETWEEN TO_DATE('15-MAR-2023', 'DD-MON-YYYY') AND TO_DATE('31-MAR-2023', 'DD-MON-YYYY');

Question 4 Variation 2:
Modify the view to include a column that calculates the profit for each pet sale (profit = price - commission).

No additional sample data is required as it uses the existing data.

CREATE OR REPLACE VIEW Pet_Transactions_Monthly AS
SELECT PS.customer_id, PS.pet_id, PS.sales_date AS TRANS_DATE, P.pet_type AS PET_TYPE,
       (P.price * 0.10) AS COMMISSION,
       P.price AS TOTAL,
       (P.price - (P.price * 0.10)) AS PROFIT
FROM PET_SALES PS
JOIN PETS P ON PS.pet_id = P.pet_id
WHERE PS.sales_date BETWEEN TO_DATE('15-MAR-2023', 'DD-MON-YYYY') AND TO_DATE('31-MAR-2023', 'DD-MON-YYYY');


Question 4 Variation 3:
Create a query to find the total number of pet sales for each day of the week (e.g., Monday, Tuesday, etc.).

Sample Results:


DAY_OF_WEEK  SALE_COUNT
Friday       1
Monday       1
Saturday     1
Sunday       1
Thursday     1

SELECT TO_CHAR(PS.sales_date, 'Day') AS DAY_OF_WEEK, COUNT(PS.sales_id) AS SALE_COUNT
FROM PET_SALES PS
GROUP BY TO_CHAR(PS.sales_date, 'Day')
ORDER BY TO_CHAR(PS.sales_date, 'Day');

These variations can be tested with the provided sample data to assess SQL querying and view creation skills.

Here are different variations of the questions along with sample data and solutions for each question based on the tables PETS, CUSTOMER, and PET_SALES.

Original Question 2 (Revised) - Display pet sales details with total sales amount:

Question:
Create a SQL query to display the details of pet sales, including the pet type, customer name, sales date, and total sales amount (price). Calculate the total sales amount for each transaction.

Sample Data:
Assuming we have the following data in the tables:

Table PETS:

yaml
Copy code
| pet_id | pet_type | pet_breed    | price  |
|--------|----------|--------------|--------|
| 100001 | Dog      | Jack Russel  | 5000.0 |
| 100002 | Cat      | Siamese      | 3800.0 |
Table CUSTOMER:

sql
Copy code
| customer_id | customer_name     | customer_email     |
|-------------|-------------------|--------------------|
| cust_101    | Jeff Jones        | jj@xcom.com         |
| cust_102    | Sally Williams    | sally@ymail.com     |
Table PET_SALES:

yaml
Copy code
| sales_id | sales_date    | pet_id | customer_id |
|----------|---------------|--------|-------------|
| 1        | 15 March 2023 | 100002 | cust_101    |
| 2        | 17 March 2023 | 100001 | cust_102    |
Solution:

sql
Copy code
SELECT
    P.pet_type AS PET_TYPE,
    C.customer_name AS CUSTOMER_NAME,
    TO_CHAR(PS.sales_date, 'DD Month YYYY') AS SALES_DATE,
    P.price AS TOTAL_SALES_AMOUNT
FROM
    PET_SALES PS
JOIN
    PETS P
ON
    PS.pet_id = P.pet_id
JOIN
    CUSTOMER C
ON
    PS.customer_id = C.customer_id;
Revised Question 3 - Display pet sales details with total sales amount and calculate a 10% commission:

Question:
Create a SQL query to display the details of pet sales, including the pet type, customer name, sales date, total sales amount (price), 10% commission value, and the final total including commission for each transaction.

Sample Data:
Use the same sample data as in the previous question.

Solution:

sql
Copy code
SELECT
    P.pet_type AS PET_TYPE,
    C.customer_name AS CUSTOMER_NAME,
    TO_CHAR(PS.sales_date, 'DD Month YYYY') AS SALES_DATE,
    P.price AS TOTAL_SALES_AMOUNT,
    (P.price * 0.10) AS COMMISSION,
    (P.price + (P.price * 0.10)) AS TOTAL_WITH_COMMISSION
FROM
    PET_SALES PS
JOIN
    PETS P
ON
    PS.pet_id = P.pet_id
JOIN
    CUSTOMER C
ON
    PS.customer_id = C.customer_id;
Revised Question 4 - Create a view with pet sales details within a specific date range:

Question:
Create a view called Transaction_Details that will display the pet type, customer name, sales date, and total sales amount for pet sales transactions that occurred between March 1, 2023, and March 31, 2023.

Sample Data:
Use the same sample data as in the previous questions.

Solution:

sql
Copy code
CREATE VIEW Transaction_Details AS
SELECT
    P.pet_type AS PET_TYPE,
    C.customer_name AS CUSTOMER_NAME,
    TO_CHAR(PS.sales_date, 'DD Month YYYY') AS SALES_DATE,
    P.price AS TOTAL_SALES_AMOUNT
FROM
    PET_SALES PS
JOIN
    PETS P
ON
    PS.pet_id = P.pet_id
JOIN
    CUSTOMER C
ON
    PS.customer_id = C.customer_id
WHERE
    PS.sales_date BETWEEN TO_DATE('01-MAR-2023', 'DD-MON-YYYY') AND TO_DATE('31-MAR-2023', 'DD-MON-YYYY');